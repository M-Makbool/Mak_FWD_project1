/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  <Write File Name>
 *       Module:  -
 *
 *  Description:  <Write File DESCRIPTION here>     
 *  
 *********************************************************************************************************************/
#ifndef GPIO_MAK_H
#define GPIO_MAK_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
#include "stdint.h"
#include "TM4C123.h"
/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

/* Macros Of Port */
#define PORTA 0U
#define PORTB 1U
#define PORTC 2U
#define PORTD 3U
#define PORTE 4U
#define PORTF 5U

/* Macros Of Pins */
#define PIN0 0U
#define PIN1 1U
#define PIN2 2U
#define PIN3 3U
#define PIN4 4U
#define PIN5 5U
#define PIN6 6U
#define PIN7 7U

#define ALL_OUTPUT 0xFF
#define ALL_INPUT 0U

#define OUTPUT 1U
#define INPUT 0U

#define HIGH 1U
#define LOW 0U
/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/

#define SET_BIT(REGISTER, BITNUMBER) REGISTER |= 1U << BITNUMBER
#define CLR_BIT(REGISTER, BITNUMBER) REGISTER &= ~(1U << BITNUMBER)
#define TOG_BIT(REGISTER, BITNUMBER) REGISTER ^= 1U << BITNUMBER
#define GET_BIT(REGISTER, BITNUMBER) ((REGISTER >> BITNUMBER) & 1U)


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/
void GPIO_Mak_DigitalWritePort(uint8_t portName, uint8_t portLevel);
void GPIO_Mak_DigitalWritePin(uint8_t portName, uint8_t pinName, uint8_t portLevel);
void GPIO_Mak_PortMode(uint8_t portName, uint8_t portLevel);
void GPIO_Mak_PinMode(uint8_t portName, uint8_t pinName, uint8_t portLevel);
 
#endif  /* GPIO_Mak_H */

/**********************************************************************************************************************
 *  END OF FILE: GPIO_Mak.h
 *********************************************************************************************************************/
